services:
  postgres:
    image: postgres
    container_name: postgres
    env_file: ./.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - .:/docker-entrypoint-initdb.d
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - bridge
  fund-server:
    container_name: backend
    env_file: ./backend/.env
    build:
      context: ./backend
    environment:
      NODE_ENV: production
    ports:
      - "4000:4000"
    depends_on:
      - postgres
    command: npm run start:prod
    volumes:
      - ./media:/app/media
    networks:
      - bridge
    extra_hosts:
      - "host.docker.internal:host-gateway"
  client:
    build: ./frontend
    env_file: ./frontend/.env
    container_name: client_frontend
    ports:
      - "3000:3000"
    networks:
      - bridge
    depends_on:
      - fund-server
    command: sh -c "npm run build && npm install -g serve && serve -s build"
  nginx:
    image: nginx:bookworm
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    networks:
      - bridge
    depends_on:
      - client
      - fund-server
    extra_hosts:
      - "host.docker.internal:host-gateway"
networks:
  bridge:
    driver: bridge

volumes:
  postgres_data:
  media:
